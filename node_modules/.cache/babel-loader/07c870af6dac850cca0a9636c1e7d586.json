{"ast":null,"code":"import*as axios from'axios';var instance=axios.create({withCredentials:true,baseURL:\"https://social-network.samuraijs.com/api/1.0/\",headers:{'API-KEY':'680d6832-2492-479a-8fe2-20cfebc65ed9'}});export var usersAPI={getUserListRequest:function getUserListRequest(){var userListCurrentPage=arguments.length>0&&arguments[0]!==undefined?arguments[0]:1;var userListPageSize=arguments.length>1&&arguments[1]!==undefined?arguments[1]:10;return instance.get(\"users?page=\".concat(userListCurrentPage,\"&count=\").concat(userListPageSize)).then(function(response){return response.data;});},followRequest:function followRequest(userId){return instance.post(\"follow/\".concat(userId)).then(function(response){return response.data;});},unfollowRequest:function unfollowRequest(userId){return instance.delete(\"follow/\".concat(userId)).then(function(response){return response.data;});},getProfileRequest:function getProfileRequest(userId){console.warn('Obsolete method. Please use profileAPI.getProfileRequest');return profileAPI.getProfileRequest(userId);}};export var profileAPI={getProfileRequest:function getProfileRequest(userId){return instance.get(\"profile/\"+userId).then(function(response){return response.data;});},getStatusRequest:function getStatusRequest(userId){return instance.get(\"profile/status/\"+userId);},updateAuthStatusRequest:function updateAuthStatusRequest(status){return instance.put(\"profile/status\",{status:status});}};export var authMeAPI={authMeRequest:function authMeRequest(){return instance.get(\"auth/me\").then(function(response){return response.data;});},authLoginRequest:function authLoginRequest(formData){return instance.post(\"auth/login\",{email:formData.email,password:formData.password,rememberMe:formData.rememberMe}).then(function(response){return response.data;});},authLogOutRequest:function authLogOutRequest(){return instance.delete(\"auth/login\").then(function(response){return response.data;});}};","map":{"version":3,"sources":["/Users/liliia/Downloads/demo-social-network/src/api/api.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","usersAPI","getUserListRequest","userListCurrentPage","userListPageSize","get","then","response","data","followRequest","userId","post","unfollowRequest","delete","getProfileRequest","console","warn","profileAPI","getStatusRequest","updateAuthStatusRequest","status","put","authMeAPI","authMeRequest","authLoginRequest","formData","email","password","rememberMe","authLogOutRequest"],"mappings":"AAAA,MAAO,GAAKA,CAAAA,KAAZ,KAAuB,OAAvB,CAEA,GAAMC,CAAAA,QAAQ,CAAGD,KAAK,CAACE,MAAN,CAAa,CAC5BC,eAAe,CAAE,IADW,CAE5BC,OAAO,gDAFqB,CAG5BC,OAAO,CAAE,CACP,UAAW,sCADJ,CAHmB,CAAb,CAAjB,CAQA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,CAEtBC,kBAFsB,8BAE6C,IAAhDC,CAAAA,mBAAgD,2DAA1B,CAA0B,IAAvBC,CAAAA,gBAAuB,2DAAJ,EAAI,CACjE,MAAOR,CAAAA,QAAQ,CAACS,GAAT,sBAA2BF,mBAA3B,mBAAwDC,gBAAxD,GACJE,IADI,CACC,SAAAC,QAAQ,CAAI,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAhB,CACD,CAHI,CAAP,CAID,CAPqB,CAQtBC,aARsB,wBAQRC,MARQ,CAQA,CACpB,MAAOd,CAAAA,QAAQ,CAACe,IAAT,kBAAwBD,MAAxB,GACJJ,IADI,CACC,SAAAC,QAAQ,CAAI,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAhB,CACD,CAHI,CAAP,CAID,CAbqB,CActBI,eAdsB,0BAcNF,MAdM,CAcE,CACtB,MAAOd,CAAAA,QAAQ,CAACiB,MAAT,kBAA0BH,MAA1B,GACJJ,IADI,CACC,SAAAC,QAAQ,CAAI,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAhB,CACD,CAHI,CAAP,CAID,CAnBqB,CAoBtBM,iBApBsB,4BAoBJJ,MApBI,CAoBI,CACxBK,OAAO,CAACC,IAAR,CAAa,0DAAb,EACA,MAAOC,CAAAA,UAAU,CAACH,iBAAX,CAA6BJ,MAA7B,CAAP,CACD,CAvBqB,CAAjB,CA2BP,MAAO,IAAMO,CAAAA,UAAU,CAAG,CACxBH,iBADwB,4BACNJ,MADM,CACE,CACxB,MAAOd,CAAAA,QAAQ,CAACS,GAAT,CAAa,WAAaK,MAA1B,EACJJ,IADI,CACC,SAAAC,QAAQ,CAAI,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAhB,CACD,CAHI,CAAP,CAID,CANuB,CAOxBU,gBAPwB,2BAOPR,MAPO,CAOC,CACvB,MAAOd,CAAAA,QAAQ,CAACS,GAAT,CAAa,kBAAoBK,MAAjC,CAAP,CACD,CATuB,CAUxBS,uBAVwB,kCAUAC,MAVA,CAUQ,CAC9B,MAAOxB,CAAAA,QAAQ,CAACyB,GAAT,kBAA+B,CAAED,MAAM,CAAEA,MAAV,CAA/B,CAAP,CACD,CAZuB,CAAnB,CAgBP,MAAO,IAAME,CAAAA,SAAS,CAAG,CACvBC,aADuB,yBACP,CACd,MAAO3B,CAAAA,QAAQ,CAACS,GAAT,YACJC,IADI,CACC,SAAAC,QAAQ,CAAI,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAhB,CACD,CAHI,CAAP,CAID,CANsB,CAOvBgB,gBAPuB,2BAONC,QAPM,CAOI,CACzB,MAAO7B,CAAAA,QAAQ,CAACe,IAAT,cAA4B,CACjCe,KAAK,CAAED,QAAQ,CAACC,KADiB,CAEjCC,QAAQ,CAAEF,QAAQ,CAACE,QAFc,CAGjCC,UAAU,CAAEH,QAAQ,CAACG,UAHY,CAA5B,EAIJtB,IAJI,CAIC,SAAAC,QAAQ,CAAI,CAClB,MAAOA,CAAAA,QAAQ,CAACC,IAAhB,CACD,CANM,CAAP,CAOD,CAfsB,CAgBvBqB,iBAhBuB,6BAgBH,CAClB,MAAOjC,CAAAA,QAAQ,CAACiB,MAAT,eACNP,IADM,CACD,SAAAC,QAAQ,CAAI,CAChB,MAAOA,CAAAA,QAAQ,CAACC,IAAhB,CACD,CAHM,CAAP,CAID,CArBsB,CAAlB","sourcesContent":["import * as axios from 'axios';\n\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n  headers: {\n    'API-KEY': '680d6832-2492-479a-8fe2-20cfebc65ed9',\n  },\n});\n\nexport const usersAPI = {\n\n  getUserListRequest(userListCurrentPage = 1, userListPageSize = 10) {\n    return instance.get(`users?page=${userListCurrentPage}&count=${userListPageSize}`)\n      .then(response => {\n        return response.data;\n      })\n  },\n  followRequest(userId) {\n    return instance.post(`follow/${userId}`)\n      .then(response => {\n        return response.data;\n      })\n  },\n  unfollowRequest(userId) {\n    return instance.delete(`follow/${userId}`)\n      .then(response => {\n        return response.data;\n      })\n  },\n  getProfileRequest(userId) {\n    console.warn('Obsolete method. Please use profileAPI.getProfileRequest');\n    return profileAPI.getProfileRequest(userId);\n  }\n}\n\n\nexport const profileAPI = {\n  getProfileRequest(userId) {\n    return instance.get(`profile/` + userId)\n      .then(response => {\n        return response.data;\n      })\n  },\n  getStatusRequest(userId) {\n    return instance.get(`profile/status/` + userId);\n  },\n  updateAuthStatusRequest(status) {\n    return instance.put(`profile/status`, { status: status });\n  }\n}\n\n\nexport const authMeAPI = {\n  authMeRequest() {\n    return instance.get(`auth/me`)\n      .then(response => {\n        return response.data;\n      })\n  },\n  authLoginRequest(formData) {\n    return instance.post(`auth/login`, {\n      email: formData.email,\n      password: formData.password,\n      rememberMe: formData.rememberMe\n    }).then(response => {\n      return response.data;\n    })\n  },\n  authLogOutRequest() {\n    return instance.delete(`auth/login`)\n    .then(response => {\n      return response.data;\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}
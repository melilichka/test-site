{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/liliia/Downloads/demo-social-network/src/hoc/withAuthRedirect.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nlet mapStateToPropsForRedirect = state => {\n  return {\n    isAuth: state.auth.isAuth\n  };\n};\n\nexport const withAuthRedirect = Component => {\n  class RedirectComponent extends React.Component {\n    render() {\n      if (!this.props.isAuth) return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 39\n      }, this);\n      return /*#__PURE__*/_jsxDEV(Component, { ...this.props\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 15\n      }, this);\n    }\n\n  }\n\n  return connect(mapStateToPropsForRedirect)(RedirectComponent);\n};","map":{"version":3,"sources":["/Users/liliia/Downloads/demo-social-network/src/hoc/withAuthRedirect.js"],"names":["React","connect","Redirect","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","render","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,QAAT,QAAyB,kBAAzB;;AAEA,IAAIC,0BAA0B,GAAIC,KAAD,IAAW;AAC1C,SAAO;AACLC,IAAAA,MAAM,EAAED,KAAK,CAACE,IAAN,CAAWD;AADd,GAAP;AAGD,CAJD;;AAMA,OAAO,MAAME,gBAAgB,GAAIC,SAAD,IAAe;AAC7C,QAAMC,iBAAN,SAAiCT,KAAK,CAACQ,SAAvC,CAAiD;AAC/CE,IAAAA,MAAM,GAAG;AACN,UAAI,CAAC,KAAKC,KAAL,CAAWN,MAAhB,EAAwB,oBAAO,QAAC,QAAD;AAAU,QAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,cAAP;AACxB,0BAAO,QAAC,SAAD,OAAe,KAAKM;AAApB;AAAA;AAAA;AAAA;AAAA,cAAP;AACF;;AAJ8C;;AAQjD,SAAOV,OAAO,CAACE,0BAAD,CAAP,CAAoCM,iBAApC,CAAP;AACD,CAVM","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\n\nlet mapStateToPropsForRedirect = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n  }\n}\n\nexport const withAuthRedirect = (Component) => {\n  class RedirectComponent  extends React.Component {\n    render() {\n       if (!this.props.isAuth) return <Redirect to='/login'/>\n       return <Component {...this.props}/>\n    };\n\n    \n  }\n  return connect(mapStateToPropsForRedirect)(RedirectComponent);\n}"]},"metadata":{},"sourceType":"module"}
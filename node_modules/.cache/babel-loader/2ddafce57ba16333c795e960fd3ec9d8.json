{"ast":null,"code":"import { getAuthUserData } from \"./authReducer\";\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\nlet initialState = {\n  initialized: false\n};\n\nconst appReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case INITIALIZED_SUCCESS:\n      return { ...state,\n        initialized: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const initializedSuccess = () => ({\n  type: INITIALIZED_SUCCESS\n});\nexport const initializeApp = () => dispatch => {\n  let authUserDataPromise = dispatch(getAuthUserData());\n  Promise.all([authUserDataPromise]).then(() => {\n    dispatch(initializedSuccess());\n  });\n};\nexport default appReducer;","map":{"version":3,"sources":["/Users/liliia/Downloads/demo-social-network/src/Redux/appReducer.js"],"names":["getAuthUserData","INITIALIZED_SUCCESS","initialState","initialized","appReducer","state","action","type","initializedSuccess","initializeApp","dispatch","authUserDataPromise","Promise","all","then"],"mappings":"AAAA,SAASA,eAAT,QAAgC,eAAhC;AAEA,MAAMC,mBAAmB,GAAG,qBAA5B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,WAAW,EAAE;AADE,CAAnB;;AAIA,MAAMC,UAAU,GAAG,CAACC,KAAK,GAAGH,YAAT,EAAuBI,MAAvB,KAAkC;AAEjD,UAAQA,MAAM,CAACC,IAAf;AAEI,SAAKN,mBAAL;AACI,aAAO,EACH,GAAGI,KADA;AAEHF,QAAAA,WAAW,EAAE;AAFV,OAAP;;AAKJ;AACI,aAAOE,KAAP;AATR;AAWH,CAbD;;AAeA,OAAO,MAAMG,kBAAkB,GAAG,OAAO;AAAED,EAAAA,IAAI,EAAEN;AAAR,CAAP,CAA3B;AAEP,OAAO,MAAMQ,aAAa,GAAG,MAAOC,QAAD,IAAc;AACzC,MAAIC,mBAAmB,GAAGD,QAAQ,CAACV,eAAe,EAAhB,CAAlC;AAEAY,EAAAA,OAAO,CAACC,GAAR,CAAY,CAACF,mBAAD,CAAZ,EACKG,IADL,CACU,MAAM;AACRJ,IAAAA,QAAQ,CAACF,kBAAkB,EAAnB,CAAR;AACH,GAHL;AAIP,CAPM;AASP,eAAeJ,UAAf","sourcesContent":["import { getAuthUserData } from \"./authReducer\";\n\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\n\nlet initialState = {\n    initialized: false,\n}\n\nconst appReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n\n        case INITIALIZED_SUCCESS:\n            return {\n                ...state,\n                initialized: true,\n            }\n\n        default:\n            return state;\n    }\n}\n\nexport const initializedSuccess = () => ({ type: INITIALIZED_SUCCESS });\n\nexport const initializeApp = () => (dispatch) => {\n        let authUserDataPromise = dispatch(getAuthUserData());\n\n        Promise.all([authUserDataPromise])\n            .then(() => {\n                dispatch(initializedSuccess())\n            })\n};\n\nexport default appReducer;\n\n"]},"metadata":{},"sourceType":"module"}
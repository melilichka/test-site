{"ast":null,"code":"import _toConsumableArray from\"/Users/liliia/Downloads/demo-social-network/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import React,{memo}from'react';import{Field,reduxForm}from'redux-form';import{maxLength}from'../../Common/utils/validators';import{Textarea}from'../../Common/FormControls/FormControls';import style from'./MyPosts.module.css';import Post from'./Post/Post';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var maxLength300=maxLength(300);var AddNewPostForm=function AddNewPostForm(props){return/*#__PURE__*/_jsxs(\"form\",{onSubmit:props.handleSubmit,children:[/*#__PURE__*/_jsx(Field// onChange={onPostChange}\n// ref={newPost}\n// value={newPostText}\n,{component:Textarea,validate:[maxLength300],name:\"newPostBody\",placeholder:\"Enter your post...\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\"// onClick={onAddPostClick}\n,children:\"Add post\"})]});};var AddNewPostReduxForm=reduxForm({form:'addPost'})(AddNewPostForm);window.props=[];var MyPosts=/*#__PURE__*/memo(function(props){console.log(props.profilePage.posts);console.log('render');window.props.push(props.profilePage.posts);var posts=props.profilePage.posts;// let newPostText = props.profilePage.newPostText;\nvar postsElements=_toConsumableArray(posts).reverse().map(function(p){return/*#__PURE__*/_jsx(Post,{id:p.id,avatar:p.avatar,likesCount:p.likesCount,message:p.message},p.id);});// let newPost = React.createRef();\n// let onPostChange = () => {\n//     let text = newPost.current.value;\n//     props.updateNewPostText(text);\n// }\n// let onAddPostClick = () => {\n//     props.addPost();\n// }\nvar addPostSubmit=function addPostSubmit(values){props.addPost(values.newPostBody);};return/*#__PURE__*/_jsxs(\"div\",{className:style.postBlock,children:[/*#__PURE__*/_jsx(\"p\",{children:\"My post\"}),/*#__PURE__*/_jsx(AddNewPostReduxForm,{onSubmit:addPostSubmit}),/*#__PURE__*/_jsx(\"div\",{className:style.posts,children:postsElements})]});});export default MyPosts;","map":{"version":3,"sources":["/Users/liliia/Downloads/demo-social-network/src/components/Profile/MyPosts/MyPosts.jsx"],"names":["React","memo","Field","reduxForm","maxLength","Textarea","style","Post","maxLength300","AddNewPostForm","props","handleSubmit","AddNewPostReduxForm","form","window","MyPosts","console","log","profilePage","posts","push","postsElements","reverse","map","p","id","avatar","likesCount","message","addPostSubmit","values","addPost","newPostBody","postBlock"],"mappings":"0KAAA,MAAOA,CAAAA,KAAP,EAAgBC,IAAhB,KAA4B,OAA5B,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,YAAjC,CACA,OAASC,SAAT,KAA0B,+BAA1B,CACA,OAASC,QAAT,KAAyB,wCAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,sBAAlB,CACA,MAAOC,CAAAA,IAAP,KAAiB,aAAjB,C,wFAEA,GAAMC,CAAAA,YAAY,CAAGJ,SAAS,CAAC,GAAD,CAA9B,CAEA,GAAMK,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAC9B,mBACI,cAAM,QAAQ,CAAEA,KAAK,CAACC,YAAtB,wBACI,KAAC,KACG;AACA;AACA;AAHJ,EAII,SAAS,CAAEN,QAJf,CAKI,QAAQ,CAAE,CAACG,YAAD,CALd,CAMI,IAAI,CAAC,aANT,CAOI,WAAW,CAAC,oBAPhB,EADJ,cASI,eACI,IAAI,CAAC,QACL;AAFJ,sBATJ,GADJ,CAgBH,CAjBD,CAmBA,GAAMI,CAAAA,mBAAmB,CAAGT,SAAS,CAAC,CAACU,IAAI,CAAC,SAAN,CAAD,CAAT,CAA4BJ,cAA5B,CAA5B,CACAK,MAAM,CAACJ,KAAP,CAAc,EAAd,CAEA,GAAMK,CAAAA,OAAO,cAAGd,IAAI,CAAC,SAAAS,KAAK,CAAG,CACzBM,OAAO,CAACC,GAAR,CAAYP,KAAK,CAACQ,WAAN,CAAkBC,KAA9B,EACAH,OAAO,CAACC,GAAR,CAAY,QAAZ,EACAH,MAAM,CAACJ,KAAP,CAAaU,IAAb,CAAkBV,KAAK,CAACQ,WAAN,CAAkBC,KAApC,EAEA,GAAIA,CAAAA,KAAK,CAAGT,KAAK,CAACQ,WAAN,CAAkBC,KAA9B,CACA;AAEA,GAAIE,CAAAA,aAAa,CAAG,mBAAIF,KAAJ,EACnBG,OADmB,GAEnBC,GAFmB,CAEf,SAAAC,CAAC,CAAI,CACN,mBACI,KAAC,IAAD,EACI,EAAE,CAAEA,CAAC,CAACC,EADV,CAEI,MAAM,CAAED,CAAC,CAACE,MAFd,CAGI,UAAU,CAAEF,CAAC,CAACG,UAHlB,CAII,OAAO,CAAEH,CAAC,CAACI,OAJf,EAKSJ,CAAC,CAACC,EALX,CADJ,CASH,CAZmB,CAApB,CAcA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA,GAAMI,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,CAACC,MAAD,CAAY,CAC9BpB,KAAK,CAACqB,OAAN,CAAcD,MAAM,CAACE,WAArB,EACH,CAFD,CAGA,mBACI,aAAK,SAAS,CAAE1B,KAAK,CAAC2B,SAAtB,wBACI,8BADJ,cAEI,KAAC,mBAAD,EAAqB,QAAQ,CAAEJ,aAA/B,EAFJ,cAGI,YAAK,SAAS,CAAEvB,KAAK,CAACa,KAAtB,UACKE,aADL,EAHJ,GADJ,CASH,CA7CmB,CAApB,CAmDA,cAAeN,CAAAA,OAAf","sourcesContent":["import React, { memo } from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { maxLength } from '../../Common/utils/validators';\nimport { Textarea } from '../../Common/FormControls/FormControls';\nimport style from './MyPosts.module.css';\nimport Post from './Post/Post';\n\nconst maxLength300 = maxLength(300);\n\nconst AddNewPostForm = (props) => {\n    return (\n        <form onSubmit={props.handleSubmit}>\n            <Field\n                // onChange={onPostChange}\n                // ref={newPost}\n                // value={newPostText}\n                component={Textarea}\n                validate={[maxLength300]}\n                name='newPostBody'\n                placeholder='Enter your post...' />\n            <button\n                type='submit'\n                // onClick={onAddPostClick}\n            >Add post</button>\n        </form>\n    )\n}\n\nconst AddNewPostReduxForm = reduxForm({form:'addPost'})(AddNewPostForm);\nwindow.props= [];\n\nconst MyPosts = memo(props=> {\n    console.log(props.profilePage.posts);\n    console.log('render');\n    window.props.push(props.profilePage.posts);\n    \n    let posts = props.profilePage.posts;\n    // let newPostText = props.profilePage.newPostText;\n    \n    let postsElements = [...posts]\n    .reverse()\n    .map(p => {\n        return (\n            <Post\n                id={p.id}\n                avatar={p.avatar}\n                likesCount={p.likesCount}\n                message={p.message}\n                key={p.id}\n            />\n        )\n    });\n    \n    // let newPost = React.createRef();\n    \n    // let onPostChange = () => {\n    //     let text = newPost.current.value;\n    //     props.updateNewPostText(text);\n    // }\n    \n    // let onAddPostClick = () => {\n    //     props.addPost();\n    // }\n    \n    const addPostSubmit = (values) => {\n        props.addPost(values.newPostBody);\n    }\n    return (\n        <div className={style.postBlock}>\n            <p>My post</p>\n            <AddNewPostReduxForm onSubmit={addPostSubmit}/>\n            <div className={style.posts}>\n                {postsElements}\n            </div>\n        </div>\n    );\n});\n\n\n   \n   \n\nexport default MyPosts;"]},"metadata":{},"sourceType":"module"}
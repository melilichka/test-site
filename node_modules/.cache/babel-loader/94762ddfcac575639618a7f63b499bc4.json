{"ast":null,"code":"import { profileAPI } from '../api/api';\nimport avatarIcon from '../assets/images/rainbow.jpeg';\nconst ADD_POST = 'ADD_POST';\nconst DELETE_POST = 'DELETE_POST'; // const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\n\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\nlet initialState = {\n  posts: [{\n    id: 1,\n    avatar: avatarIcon,\n    likesCount: 14,\n    message: 'It\\'s my first post about '\n  }, {\n    id: 2,\n    avatar: avatarIcon,\n    likesCount: 10,\n    message: 'What a wonderful world!'\n  }, {\n    id: 3,\n    avatar: '',\n    likesCount: 30,\n    message: 'Every life matters. Even the smallest.'\n  }],\n  // newPostText: '',\n  userProfile: null,\n  status: ''\n};\n\nconst profileReducer = (state = initialState, action) => {\n  switch (action.type) {\n    // case UPDATE_NEW_POST_TEXT:\n    //   return {\n    //     ...state,\n    //     newPostText: action.newPostChange,\n    //   }\n    case ADD_POST:\n      let newPost = {\n        id: 5,\n        avatar: avatarIcon,\n        likesCount: 0,\n        message: action.newPostBody\n      };\n      return { ...state,\n        posts: [...state.posts, newPost] // newPostText: '',\n\n      };\n\n    case DELETE_POST:\n      return { ...state,\n        posts: [...state.posts].filter(p => p.id !== action.postId)\n      };\n\n    case SET_USER_PROFILE:\n      {\n        return { ...state,\n          userProfile: action.userProfileData\n        };\n      }\n\n    case SET_STATUS:\n      {\n        return { ...state,\n          status: action.status\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const addPost = newPostBody => ({\n  type: ADD_POST,\n  newPostBody\n}); //actionCreator create the action ={type: ADD_POST, newPostBody:newPostBody}\n\nexport const deletePost = postId => ({\n  type: DELETE_POST,\n  postId\n}); // export const updateNewPostTextCreator = (text) => ({ type: UPDATE_NEW_POST_TEXT, newPostChange: text });\n\nexport const setUserProfile = userProfileData => ({\n  type: SET_USER_PROFILE,\n  userProfileData\n});\nexport const setStatus = status => ({\n  type: SET_STATUS,\n  status\n});\nexport const getProfile = userId => dispatch => {\n  profileAPI.getProfileRequest(userId).then(data => {\n    dispatch(setUserProfile(data));\n  });\n};\nexport const getStatus = userId => dispatch => {\n  profileAPI.getStatusRequest(userId).then(response => {\n    dispatch(setStatus(response.data));\n  });\n};\nexport const updateAuthStatus = status => dispatch => {\n  profileAPI.updateAuthStatusRequest(status).then(response => {\n    if (response.data.resultCode === 0) {\n      dispatch(setStatus(status));\n    }\n  });\n};\nexport default profileReducer;","map":{"version":3,"sources":["/Users/liliia/Downloads/demo-social-network/src/Redux/profileReducer.js"],"names":["profileAPI","avatarIcon","ADD_POST","DELETE_POST","SET_USER_PROFILE","SET_STATUS","initialState","posts","id","avatar","likesCount","message","userProfile","status","profileReducer","state","action","type","newPost","newPostBody","filter","p","postId","userProfileData","addPost","deletePost","setUserProfile","setStatus","getProfile","userId","dispatch","getProfileRequest","then","data","getStatus","getStatusRequest","response","updateAuthStatus","updateAuthStatusRequest","resultCode"],"mappings":"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","sourcesContent":["import { profileAPI } from '../api/api';\nimport avatarIcon from '../assets/images/rainbow.jpeg';\n\nconst ADD_POST = 'ADD_POST';\nconst DELETE_POST = 'DELETE_POST';\n// const UPDATE_NEW_POST_TEXT = 'UPDATE-NEW-POST-TEXT';\nconst SET_USER_PROFILE = 'SET_USER_PROFILE';\nconst SET_STATUS = 'SET_STATUS';\n\nlet initialState = {\n  posts: [\n    { id: 1, avatar: avatarIcon, likesCount: 14, message: 'It\\'s my first post about ', },\n    { id: 2, avatar: avatarIcon, likesCount: 10, message: 'What a wonderful world!', },\n    { id: 3, avatar: '', likesCount: 30, message: 'Every life matters. Even the smallest.', },\n  ],\n  // newPostText: '',\n  userProfile: null,\n  status: '',\n}\nconst profileReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n\n    // case UPDATE_NEW_POST_TEXT:\n    //   return {\n    //     ...state,\n    //     newPostText: action.newPostChange,\n    //   }\n\n    case ADD_POST:\n      let newPost = {\n        id: 5,\n        avatar: avatarIcon,\n        likesCount: 0,\n        message: action.newPostBody,\n      };\n      return {\n        ...state,\n        posts: [...state.posts, newPost],\n        // newPostText: '',\n      }\n\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: [...state.posts].filter(p => p.id !== action.postId),\n      }\n\n    case SET_USER_PROFILE: {\n      return {\n        ...state,\n        userProfile: action.userProfileData,\n      }\n    }\n\n    case SET_STATUS: {\n      return {\n        ...state,\n        status: action.status,\n      }\n    }\n    \n    default:\n      return state;\n  }\n}\n\nexport const addPost = (newPostBody) => ({ type: ADD_POST, newPostBody }); //actionCreator create the action ={type: ADD_POST, newPostBody:newPostBody}\nexport const deletePost = (postId) => ({ type: DELETE_POST, postId });\n// export const updateNewPostTextCreator = (text) => ({ type: UPDATE_NEW_POST_TEXT, newPostChange: text });\nexport const setUserProfile = (userProfileData) => ({ type: SET_USER_PROFILE, userProfileData });\nexport const setStatus = (status) => ({ type: SET_STATUS, status });\n\nexport const getProfile = (userId) => (dispatch) => {\n  profileAPI.getProfileRequest(userId)\n    .then(data => {\n      dispatch(setUserProfile(data));\n    });\n};\n\nexport const getStatus = (userId) => (dispatch) => {\n  profileAPI.getStatusRequest(userId)\n    .then(response => {\n      dispatch(setStatus(response.data));\n    });\n};\n\nexport const updateAuthStatus = (status) => (dispatch) => {\n  profileAPI.updateAuthStatusRequest(status)\n    .then(response => {\n      if (response.data.resultCode === 0) {\n        dispatch(setStatus(status));\n      }\n    });\n};\n\nexport default profileReducer;\n\n"]},"metadata":{},"sourceType":"module"}
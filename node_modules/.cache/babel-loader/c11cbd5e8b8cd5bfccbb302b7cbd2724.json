{"ast":null,"code":"import { stopSubmit } from 'redux-form';\nimport { authMeAPI } from '../api/api';\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\nconst SET_AUTH_USER_PROFILE = 'SET_AUTH_USER_PROFILE';\nlet initialState = {\n  id: null,\n  email: null,\n  login: null,\n  isAuth: false,\n  //Header right corner\n  authProfile: null,\n  // main content\n  isRememberMe: false\n};\n\nconst authReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_AUTH_USER_DATA:\n      //Header right corner\n      return { ...state,\n        ...action.payload\n      };\n\n    case SET_AUTH_USER_PROFILE:\n      {\n        // main content\n        return { ...state,\n          authProfile: action.authProfile\n        };\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const setAuthUserData = (id, login, email, isAuth) => ({\n  type: SET_AUTH_USER_DATA,\n  payload: {\n    id,\n    login,\n    email,\n    isAuth\n  }\n});\nexport const setAuthUserProfile = authProfile => ({\n  type: SET_AUTH_USER_PROFILE,\n  authProfile\n});\nexport const getAuthUserData = () => dispatch => {\n  return authMeAPI.authMeRequest().then(data => {\n    if (data.resultCode === 0) {\n      let {\n        id,\n        login,\n        email\n      } = data.data;\n      dispatch(setAuthUserData(id, login, email, true)); // dispatch(setAuthUserData(data.data)); //It's alternative way for dispatch(setAuthUserData(id, login, email));\n      // profileAPI.getProfileRequest(data.data.id)\n      //   .then(data => {\n      //     dispatch(setAuthUserProfile(data));\n      //   });\n    }\n  });\n};\nexport const authLogIn = formData => {\n  // formData: {email, password, rememberMe}\n  return dispatch => {\n    authMeAPI.authLoginRequest(formData).then(data => {\n      if (data.resultCode === 0) {\n        dispatch(getAuthUserData());\n      } else {\n        let errorMessage = data.messages.length > 0 ? data.messages[0] : 'Common error';\n        dispatch(stopSubmit('login', {\n          _error: errorMessage\n        }));\n      }\n    });\n  };\n};\nexport const authLogOut = () => {\n  return dispatch => {\n    authMeAPI.authLogOutRequest().then(response => {\n      if (response.resultCode === 0) {\n        dispatch(setAuthUserData(null, null, null, false));\n      }\n    });\n  };\n};\nexport default authReducer;","map":{"version":3,"sources":["/Users/liliia/Downloads/demo-social-network/src/Redux/authReducer.js"],"names":["stopSubmit","authMeAPI","SET_AUTH_USER_DATA","SET_AUTH_USER_PROFILE","initialState","id","email","login","isAuth","authProfile","isRememberMe","authReducer","state","action","type","payload","setAuthUserData","setAuthUserProfile","getAuthUserData","dispatch","authMeRequest","then","data","resultCode","authLogIn","formData","authLoginRequest","errorMessage","messages","length","_error","authLogOut","authLogOutRequest","response"],"mappings":"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","sourcesContent":["import { stopSubmit } from 'redux-form';\nimport { authMeAPI } from '../api/api';\n\nconst SET_AUTH_USER_DATA = 'SET_AUTH_USER_DATA';\nconst SET_AUTH_USER_PROFILE = 'SET_AUTH_USER_PROFILE';\n\nlet initialState = {\n  id: null,\n  email: null,\n  login: null,\n  isAuth: false, //Header right corner\n  authProfile: null,// main content\n  isRememberMe: false,\n}\n\nconst authReducer = (state = initialState, action) => {\n\n  switch (action.type) {\n\n    case SET_AUTH_USER_DATA: //Header right corner\n      return {\n        ...state,\n        ...action.payload,\n      }\n\n    case SET_AUTH_USER_PROFILE: {// main content\n      return {\n        ...state,\n        authProfile: action.authProfile,\n      }\n    }\n\n    \n    default:\n      return state;\n  }\n}\n\nexport const setAuthUserData = (id, login, email, isAuth) => ({ type: SET_AUTH_USER_DATA, payload: {id, login, email,isAuth} });\nexport const setAuthUserProfile = (authProfile) => ({ type: SET_AUTH_USER_PROFILE, authProfile });\n\n\nexport const getAuthUserData = () => (dispatch) => {\n  \n    return authMeAPI.authMeRequest()\n      .then(data => {\n        if (data.resultCode === 0) {\n          let { id, login, email } = data.data;\n          dispatch(setAuthUserData(id, login, email, true));\n          // dispatch(setAuthUserData(data.data)); //It's alternative way for dispatch(setAuthUserData(id, login, email));\n          // profileAPI.getProfileRequest(data.data.id)\n          //   .then(data => {\n          //     dispatch(setAuthUserProfile(data));\n          //   });\n        }\n      });\n  \n};\n\nexport const authLogIn = (formData) => { // formData: {email, password, rememberMe}\n  return (dispatch) => {\n    authMeAPI.authLoginRequest(formData)\n      .then(data => {\n        if (data.resultCode === 0) {\n          dispatch(getAuthUserData());\n        } else {\n          let errorMessage = data.messages.length > 0 ? data.messages[0] : 'Common error';\n          dispatch(stopSubmit('login', {_error: errorMessage}));\n        }\n      });\n  }\n}\n\nexport const authLogOut = () => {\n  return (dispatch) => {\n    authMeAPI.authLogOutRequest()\n      .then(response => {\n        if (response.resultCode === 0) {\n          dispatch(setAuthUserData(null,null,null,false));\n        }\n      })\n  }\n}\n\nexport default authReducer;\n\n"]},"metadata":{},"sourceType":"module"}
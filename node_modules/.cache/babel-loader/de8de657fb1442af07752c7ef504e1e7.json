{"ast":null,"code":"import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import React from'react';import{Field,reduxForm}from'redux-form';import{authLogIn}from'../../Redux/authReducer';import{compose}from'redux';import{connect}from'react-redux';import{Input}from'../Common/FormControls/FormControls';import{required,email}from'../Common/utils/validators';import{Redirect}from'react-router-dom';import style from'../Common/FormControls/FormControls.module.css';import loginStyle from'./Login.module.css';var LoginForm=function LoginForm(props){var handleSubmit=props.handleSubmit,pristine=props.pristine,reset=props.reset;return/*#__PURE__*/_jsxs(\"form\",{className:loginStyle.loginForm,onSubmit:handleSubmit,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{name:'email',component:Input,validate:[required,email],type:'email',placeholder:'Email...'})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Field,{name:'password',component:Input,validate:[required],type:'password',placeholder:'password...'})}),/*#__PURE__*/_jsx(\"div\",{className:loginStyle.checkbox,children:/*#__PURE__*/_jsxs(\"label\",{children:[/*#__PURE__*/_jsx(Field,{name:'rememberMe',component:Input,type:'checkbox'}),\" remember me\"]})}),props.error&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"span\",{className:style.formSummaryError,children:props.error})}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"Log in\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",disabled:pristine,onClick:reset,children:\"Clear Values\"})]});};var LoginReduxForm=reduxForm({form:'login'})(LoginForm);var Login=function Login(props){var submitLoginForm=function submitLoginForm(formData){props.authLogIn(formData);};if(props.isAuth)return/*#__PURE__*/_jsx(Redirect,{to:\"/profile\"});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"div\",{children:\"Login\"}),/*#__PURE__*/_jsx(LoginReduxForm,{onSubmit:submitLoginForm})]});};var mapStateToProps=function mapStateToProps(state){return{isAuth:state.auth.isAuth};};export default compose(connect(mapStateToProps,{authLogIn:authLogIn}))(Login);","map":{"version":3,"sources":["/Users/liliia/Downloads/demo-social-network/src/components/Login/Login.jsx"],"names":["React","Field","reduxForm","authLogIn","compose","connect","Input","required","email","Redirect","style","loginStyle","LoginForm","props","handleSubmit","pristine","reset","loginForm","checkbox","error","formSummaryError","LoginReduxForm","form","Login","submitLoginForm","formData","isAuth","mapStateToProps","state","auth"],"mappings":"wFACA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,SAAhB,KAAiC,YAAjC,CACA,OAASC,SAAT,KAA0B,yBAA1B,CACA,OAASC,OAAT,KAAwB,OAAxB,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,KAAT,KAAsB,qCAAtB,CACA,OAASC,QAAT,CAAmBC,KAAnB,KAAgC,4BAAhC,CACA,OAASC,QAAT,KAAyB,kBAAzB,CACA,MAAOC,CAAAA,KAAP,KAAkB,gDAAlB,CACA,MAAOC,CAAAA,UAAP,KAAuB,oBAAvB,CAGA,GAAMC,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACC,KAAD,CAAW,IACnBC,CAAAA,YADmB,CACeD,KADf,CACnBC,YADmB,CACLC,QADK,CACeF,KADf,CACLE,QADK,CACKC,KADL,CACeH,KADf,CACKG,KADL,CAE3B,mBACE,cAAM,SAAS,CAAEL,UAAU,CAACM,SAA5B,CAAuC,QAAQ,CAAEH,YAAjD,wBACE,kCAAK,KAAC,KAAD,EACH,IAAI,CAAE,OADH,CAEH,SAAS,CAAER,KAFR,CAGH,QAAQ,CAAE,CAACC,QAAD,CAAWC,KAAX,CAHP,CAIH,IAAI,CAAE,OAJH,CAKH,WAAW,CAAE,UALV,EAAL,EADF,cAQE,kCAAK,KAAC,KAAD,EACH,IAAI,CAAE,UADH,CAEH,SAAS,CAAEF,KAFR,CAGH,QAAQ,CAAE,CAACC,QAAD,CAHP,CAIH,IAAI,CAAE,UAJH,CAKH,WAAW,CAAE,aALV,EAAL,EARF,cAeE,YAAK,SAAS,CAAEI,UAAU,CAACO,QAA3B,uBACE,sCAAO,KAAC,KAAD,EACL,IAAI,CAAE,YADD,CAEL,SAAS,CAAEZ,KAFN,CAGL,IAAI,CAAE,UAHD,EAAP,kBADF,EAfF,CAsBGO,KAAK,CAACM,KAAN,eAAe,kCAAK,aAAM,SAAS,CAAET,KAAK,CAACU,gBAAvB,UAA0CP,KAAK,CAACM,KAAhD,EAAL,EAtBlB,cAwBE,eAAQ,IAAI,CAAC,QAAb,oBAxBF,cAyBE,eAAQ,IAAI,CAAC,QAAb,CAAsB,QAAQ,CAAEJ,QAAhC,CAA0C,OAAO,CAAEC,KAAnD,0BAzBF,GADF,CA8BD,CAhCD,CAkCA,GAAMK,CAAAA,cAAc,CAAGnB,SAAS,CAAC,CAAEoB,IAAI,CAAE,OAAR,CAAD,CAAT,CAA6BV,SAA7B,CAAvB,CAEA,GAAMW,CAAAA,KAAK,CAAG,QAARA,CAAAA,KAAQ,CAACV,KAAD,CAAW,CAEvB,GAAMW,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,QAAD,CAAc,CACpCZ,KAAK,CAACV,SAAN,CAAgBsB,QAAhB,EACD,CAFD,CAGA,GAAIZ,KAAK,CAACa,MAAV,CAAkB,mBAAO,KAAC,QAAD,EAAU,EAAE,CAAC,UAAb,EAAP,CAElB,mBAAO,oCACL,8BADK,cAEL,KAAC,cAAD,EAAgB,QAAQ,CAAEF,eAA1B,EAFK,GAAP,CAID,CAXD,CAaA,GAAIG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,KAAD,CAAW,CAC/B,MAAO,CACLF,MAAM,CAAEE,KAAK,CAACC,IAAN,CAAWH,MADd,CAAP,CAGD,CAJD,CAMA,cAAetB,CAAAA,OAAO,CACpBC,OAAO,CAACsB,eAAD,CAAkB,CAAExB,SAAS,CAATA,SAAF,CAAlB,CADa,CAAP,CAEboB,KAFa,CAAf","sourcesContent":["\nimport React from 'react';\nimport { Field, reduxForm } from 'redux-form';\nimport { authLogIn } from '../../Redux/authReducer';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { Input } from '../Common/FormControls/FormControls';\nimport { required, email } from '../Common/utils/validators';\nimport { Redirect } from 'react-router-dom';\nimport style from '../Common/FormControls/FormControls.module.css';\nimport loginStyle from './Login.module.css';\n\n\nconst LoginForm = (props) => {\n  const { handleSubmit, pristine, reset } = props;\n  return (\n    <form className={loginStyle.loginForm} onSubmit={handleSubmit}>\n      <div><Field\n        name={'email'}\n        component={Input}\n        validate={[required, email]}\n        type={'email'}\n        placeholder={'Email...'} />\n      </div>\n      <div><Field\n        name={'password'}\n        component={Input}\n        validate={[required]}\n        type={'password'}\n        placeholder={'password...'} />\n      </div>\n      <div className={loginStyle.checkbox}>\n        <label><Field\n          name={'rememberMe'}\n          component={Input}\n          type={'checkbox'} /> remember me</label>\n      </div>\n\n      {props.error && <div><span className={style.formSummaryError}>{props.error}</span></div>}\n\n      <button type=\"submit\" >Log in</button>\n      <button type=\"button\" disabled={pristine} onClick={reset}>Clear Values</button>\n\n    </form>\n  )\n}\n\nconst LoginReduxForm = reduxForm({ form: 'login' })(LoginForm);\n\nconst Login = (props) => {\n \n  const submitLoginForm = (formData) => {\n    props.authLogIn(formData);\n  }\n  if (props.isAuth) return <Redirect to='/profile'/>\n  \n  return <div>\n    <div>Login</div>\n    <LoginReduxForm onSubmit={submitLoginForm} />\n  </div>\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    isAuth: state.auth.isAuth,\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps, { authLogIn }),\n)(Login);"]},"metadata":{},"sourceType":"module"}
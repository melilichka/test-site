{"ast":null,"code":"import * as axios from 'axios';\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n  headers: {\n    'API-KEY': '680d6832-2492-479a-8fe2-20cfebc65ed9'\n  }\n});\nexport const usersAPI = {\n  getUserListRequest(userListCurrentPage = 1, userListPageSize = 10) {\n    return instance.get(`users?page=${userListCurrentPage}&count=${userListPageSize}`).then(response => {\n      return response.data;\n    });\n  },\n\n  followRequest(userId) {\n    return instance.post(`follow/${userId}`).then(response => {\n      return response.data;\n    });\n  },\n\n  unfollowRequest(userId) {\n    return instance.delete(`follow/${userId}`).then(response => {\n      return response.data;\n    });\n  },\n\n  getProfileRequest(userId) {\n    console.warn('Obsolete method. Please use profileAPI.getProfileRequest');\n    return profileAPI.getProfileRequest(userId);\n  }\n\n};\nexport const profileAPI = {\n  getProfileRequest(userId) {\n    return instance.get(`profile/` + userId).then(response => {\n      return response.data;\n    });\n  },\n\n  getStatusRequest(userId) {\n    return instance.get(`profile/status/` + userId);\n  },\n\n  updateAuthStatusRequest(status) {\n    return instance.put(`profile/status`, {\n      status: status\n    });\n  }\n\n};\nexport const authMeAPI = {\n  authMeRequest() {\n    return instance.get(`auth/me`).then(response => {\n      return response.data;\n    });\n  },\n\n  authLoginRequest(formData) {\n    return instance.post(`auth/login`, {\n      email: formData.email,\n      password: formData.password,\n      rememberMe: formData.rememberMe\n    }).then(response => {\n      return response.data;\n    });\n  },\n\n  authLogOutRequest() {\n    return instance.delete(`auth/login`).then(response => {\n      return response.data;\n    });\n  }\n\n};","map":{"version":3,"sources":["/Users/liliia/Downloads/demo-social-network/src/api/api.js"],"names":["axios","instance","create","withCredentials","baseURL","headers","usersAPI","getUserListRequest","userListCurrentPage","userListPageSize","get","then","response","data","followRequest","userId","post","unfollowRequest","delete","getProfileRequest","console","warn","profileAPI","getStatusRequest","updateAuthStatusRequest","status","put","authMeAPI","authMeRequest","authLoginRequest","formData","email","password","rememberMe","authLogOutRequest"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,MAAMC,QAAQ,GAAGD,KAAK,CAACE,MAAN,CAAa;AAC5BC,EAAAA,eAAe,EAAE,IADW;AAE5BC,EAAAA,OAAO,EAAG,+CAFkB;AAG5BC,EAAAA,OAAO,EAAE;AACP,eAAW;AADJ;AAHmB,CAAb,CAAjB;AAQA,OAAO,MAAMC,QAAQ,GAAG;AAEtBC,EAAAA,kBAAkB,CAACC,mBAAmB,GAAG,CAAvB,EAA0BC,gBAAgB,GAAG,EAA7C,EAAiD;AACjE,WAAOR,QAAQ,CAACS,GAAT,CAAc,cAAaF,mBAAoB,UAASC,gBAAiB,EAAzE,EACJE,IADI,CACCC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAHI,CAAP;AAID,GAPqB;;AAQtBC,EAAAA,aAAa,CAACC,MAAD,EAAS;AACpB,WAAOd,QAAQ,CAACe,IAAT,CAAe,UAASD,MAAO,EAA/B,EACJJ,IADI,CACCC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAHI,CAAP;AAID,GAbqB;;AActBI,EAAAA,eAAe,CAACF,MAAD,EAAS;AACtB,WAAOd,QAAQ,CAACiB,MAAT,CAAiB,UAASH,MAAO,EAAjC,EACJJ,IADI,CACCC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAHI,CAAP;AAID,GAnBqB;;AAoBtBM,EAAAA,iBAAiB,CAACJ,MAAD,EAAS;AACxBK,IAAAA,OAAO,CAACC,IAAR,CAAa,0DAAb;AACA,WAAOC,UAAU,CAACH,iBAAX,CAA6BJ,MAA7B,CAAP;AACD;;AAvBqB,CAAjB;AA2BP,OAAO,MAAMO,UAAU,GAAG;AACxBH,EAAAA,iBAAiB,CAACJ,MAAD,EAAS;AACxB,WAAOd,QAAQ,CAACS,GAAT,CAAc,UAAD,GAAaK,MAA1B,EACJJ,IADI,CACCC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAHI,CAAP;AAID,GANuB;;AAOxBU,EAAAA,gBAAgB,CAACR,MAAD,EAAS;AACvB,WAAOd,QAAQ,CAACS,GAAT,CAAc,iBAAD,GAAoBK,MAAjC,CAAP;AACD,GATuB;;AAUxBS,EAAAA,uBAAuB,CAACC,MAAD,EAAS;AAC9B,WAAOxB,QAAQ,CAACyB,GAAT,CAAc,gBAAd,EAA+B;AAAED,MAAAA,MAAM,EAAEA;AAAV,KAA/B,CAAP;AACD;;AAZuB,CAAnB;AAgBP,OAAO,MAAME,SAAS,GAAG;AACvBC,EAAAA,aAAa,GAAG;AACd,WAAO3B,QAAQ,CAACS,GAAT,CAAc,SAAd,EACJC,IADI,CACCC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAHI,CAAP;AAID,GANsB;;AAOvBgB,EAAAA,gBAAgB,CAACC,QAAD,EAAW;AACzB,WAAO7B,QAAQ,CAACe,IAAT,CAAe,YAAf,EAA4B;AACjCe,MAAAA,KAAK,EAAED,QAAQ,CAACC,KADiB;AAEjCC,MAAAA,QAAQ,EAAEF,QAAQ,CAACE,QAFc;AAGjCC,MAAAA,UAAU,EAAEH,QAAQ,CAACG;AAHY,KAA5B,EAIJtB,IAJI,CAICC,QAAQ,IAAI;AAClB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KANM,CAAP;AAOD,GAfsB;;AAgBvBqB,EAAAA,iBAAiB,GAAG;AAClB,WAAOjC,QAAQ,CAACiB,MAAT,CAAiB,YAAjB,EACNP,IADM,CACDC,QAAQ,IAAI;AAChB,aAAOA,QAAQ,CAACC,IAAhB;AACD,KAHM,CAAP;AAID;;AArBsB,CAAlB","sourcesContent":["import * as axios from 'axios';\n\nconst instance = axios.create({\n  withCredentials: true,\n  baseURL: `https://social-network.samuraijs.com/api/1.0/`,\n  headers: {\n    'API-KEY': '680d6832-2492-479a-8fe2-20cfebc65ed9',\n  },\n});\n\nexport const usersAPI = {\n\n  getUserListRequest(userListCurrentPage = 1, userListPageSize = 10) {\n    return instance.get(`users?page=${userListCurrentPage}&count=${userListPageSize}`)\n      .then(response => {\n        return response.data;\n      })\n  },\n  followRequest(userId) {\n    return instance.post(`follow/${userId}`)\n      .then(response => {\n        return response.data;\n      })\n  },\n  unfollowRequest(userId) {\n    return instance.delete(`follow/${userId}`)\n      .then(response => {\n        return response.data;\n      })\n  },\n  getProfileRequest(userId) {\n    console.warn('Obsolete method. Please use profileAPI.getProfileRequest');\n    return profileAPI.getProfileRequest(userId);\n  }\n}\n\n\nexport const profileAPI = {\n  getProfileRequest(userId) {\n    return instance.get(`profile/` + userId)\n      .then(response => {\n        return response.data;\n      })\n  },\n  getStatusRequest(userId) {\n    return instance.get(`profile/status/` + userId);\n  },\n  updateAuthStatusRequest(status) {\n    return instance.put(`profile/status`, { status: status });\n  }\n}\n\n\nexport const authMeAPI = {\n  authMeRequest() {\n    return instance.get(`auth/me`)\n      .then(response => {\n        return response.data;\n      })\n  },\n  authLoginRequest(formData) {\n    return instance.post(`auth/login`, {\n      email: formData.email,\n      password: formData.password,\n      rememberMe: formData.rememberMe\n    }).then(response => {\n      return response.data;\n    })\n  },\n  authLogOutRequest() {\n    return instance.delete(`auth/login`)\n    .then(response => {\n      return response.data;\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}